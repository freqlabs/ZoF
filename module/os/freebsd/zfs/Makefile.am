src = $(top_srcdir)/module/zfs
obj = $(top_builddir)
target_cpu = $(target_cpu)

MODULE := zfs

obj-$(CONFIG_ZFS) := $(MODULE).o

ccflags-y := $(ZFS_MODULE_CFLAGS) $(ZFS_MODULE_CPPFLAGS)

# Suppress unused-value warnings in sparc64 architecture headers
ifeq ($(target_cpu),sparc64)
ccflags-y += -Wno-unused-value
endif

# Suppress unused but set variable warnings often due to ASSERTs
ccflags-y += $(NO_UNUSED_BUT_SET_VARIABLE)

$(MODULE)-objs += abd.o
$(MODULE)-objs += freebsd_crypto.o
$(MODULE)-objs += freebsd_dmu.o
$(MODULE)-objs += freebsd_kmod.o
$(MODULE)-objs += freebsd_spa.o
$(MODULE)-objs += hkdf.o
$(MODULE)-objs += vdev_file.o
$(MODULE)-objs += vdev_geom.o
$(MODULE)-objs += zfs_acl.o
$(MODULE)-objs += zfs_ctldir.o
$(MODULE)-objs += zfs_dir.o
$(MODULE)-objs += zfs_log.o
$(MODULE)-objs += zfs_replay.o
$(MODULE)-objs += zfs_vfsops.o
$(MODULE)-objs += zfs_vnops.o
$(MODULE)-objs += zfs_znode.o
$(MODULE)-objs += zio_crypt.o
$(MODULE)-objs += zvol.o

objs = $($(MODULE)-objs)
all: zfs_os.ko

include $(ZFSBASE)/module/Makefile.bsd.inc

zfs_os.ko:  $(objs)
	ld -r -d -o $@ $(objs)

